#!/bin/sh

resolv_conf_temp=/tmp/resolv.conf.tmp
resolv_conf=/etc/resolv.conf

edit_resolv_conf() {
    # sanity check before running this function
    # $1: disable_google_dns
    # $2: Dynamic DNS to be added
    test "$#" -eq 2 || return

    echo "# Generated by Chromecast dhcpcd: do not edit" > $resolv_conf_temp

    # If property "disable_google_dns" is not true,
    # use Google public dns servers as primary.
    case "$1" in
    "true")
        echo "# use DHCP DNS" >> $resolv_conf_temp
        ;;
    *)
        echo "# use Google DNS as primary" >> $resolv_conf_temp
        echo "nameserver 8.8.8.8" >> $resolv_conf_temp
        echo "nameserver 2001:4860:4860::8888" >> $resolv_conf_temp
        ;;
    esac

    # print router provided DNS
    echo "# Dynamic DNS Start: do not remove" >> $resolv_conf_temp
    for server in $2; do
        echo "nameserver $server" >> $resolv_conf_temp
    done
    echo "# Dynamic DNS End: do not remove" >> $resolv_conf_temp

    # If property "disable_google_dns" is not true,
    # use a different set of Google public dns servers as backup.
    case "$1" in
        "true")
            ;;
        *)
            echo "nameserver 8.8.4.4" >> $resolv_conf_temp
            echo "nameserver 2001:4860:4860::8844" >> $resolv_conf_temp
            ;;
    esac

    # Decrease timeout value to speed up query via a different server.
    # Increase retry attempts in case of failure.
    echo "" >> $resolv_conf_temp
    echo "options timeout:1 attempts:5" >> $resolv_conf_temp

    # For Chromecast, mv doesn't work with cross-device link.
    # Use copy and rm instead.
    # TODO(wzhong): use "mv /tmp/resolv_conf_tmp /tmp/resolv.conf"
    # if we still encounter race condition.
    cat $resolv_conf_temp > $resolv_conf
    rm $resolv_conf_temp
}
